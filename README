========
dxfwrite
========

Abstract
========
A Python library to create DXF R12 drawings.

a simple example::

    from dxfwrite import DXFEngine as dxf
    drawing = dxf.drawing('test.dxf')
    drawing.add(dxf.line((0, 0), (10, 0), color=7))
    drawing.add_layer('TEXTLAYER', color=2)
    drawing.add(dxf.text('Test', insert=(0, 0.2), layer='TEXTLAYER')
    drawing.save()

supported R12 entities
----------------------
 * ARC
 * ATTDEF
 * ATTRIB
 * BLOCK
 * CIRCLE
 * 3DFACE
 * INSERT
 * LINE
 * POINT
 * POLYLINE (special Polyface and Polymesh objects are available)
 * SHAPE (not tested)
 * SOLID
 * TRACE
 * TEXT
 * VERTEX (only for internal use, see Polyline, Polyface and Polymesh objects)

not supported R12 entities
--------------------------
 * DIMENSION

composite entities
------------------
consisting of basic R12 DXF-entities.
 * MText
 * LinearDimension
 * AngularDimension
 * ArcDimension
 * RadialDimension
 * Table (like a HTML table)

Native DXF dimensions are not supported, because I don't know how this works,
hints are welcome.

My first goal was to support newer DXF-Versions as R12, because R12 is well
supported by SDXF (stani). But this trail ends with the result that AutoCAD
crashes on opening the dxf drawings (error messages were useless). So I decided
to stay at DXF R12, and there are not enough usefull new DXF-Entities since R13
to waste my time for supporting newer DXF versions. The most interesting objects
like solid models are binary encoded and not documented by Autodesk.
My focus now lies in creating composite elements like MText, Table and various
dimension lines.

Missing from R13 and later:
 * MTEXT (R13) ... emulated as MText buildup
 * ELLIPSE (R13) ... approximated by POLYLINE
 * SPLINE (R13) ... approximated by POLYLINE
 * LWPOLYLINE ... POLYLINE
 * BODY, REGION, 3DSOLID (R13) binary encoded and not documented
 * IMAGE, HATCH, MLINE, TOLERANCE, LEADER, XLINE, RAY (R13)
 * OLEFRAME and PROXY entities (R13)
 * WIPEOUT (R2000)
 * TABLE (R2005) ... emulated as Table buildup
 * HELIX, LIGHT, MLEADER, SECTION, UNDERLAY (R2008)
 * SURFACE (R2008) binary encoded and not documented
 * SUN (R2009)
 * SUBDIVISION (R2010)

Installation
============

with easy_install::

    easy_install dxfwrite

or from source::

    python setup.py install

Documentation
=============
http://bitbucket.org/mozman/dxfwrite/wiki/Home

Good Luck! Feedback is greatly appreciated.

Manfred

mozman@gmx.at

dxfwrite can be found on bitbucket.org at:

http://bitbucket.org/mozman/dxfwrite
